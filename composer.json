{
    "name": "somework/fee-calculator",
    "type": "library",
    "description": "Utilities for calculating various fees",
    "license": "MIT",
    "authors": [
        {
            "name": "Igor Pinchuk",
            "email": "i.pinchuk.work@gmail.com"
        }
    ],
    "require": {
        "php": "^8.1",
        "ext-bcmath": "*"
    },
    "autoload": {
        "psr-4": {
            "SomeWork\\FeeCalculator\\": "src/"
        }
    },
    "require-dev": {
        "phpunit/phpunit": "^10.5",
        "phpstan/phpstan": "^1.10",
        "phpstan/phpstan-deprecation-rules": "^1.1",
        "roave/security-advisories": "dev-latest",
        "infection/infection": "^0.29",
        "squizlabs/php_codesniffer": "^3.9",
        "phpunit/phpcov": "^9.0"
    },
    "minimum-stability": "dev",
    "prefer-stable": true,
    "scripts": {
        "test": "vendor/bin/phpunit --no-coverage",
        "test-coverage": "@php -r \"if (!extension_loaded('xdebug') && !extension_loaded('pcov')) { fwrite(STDERR, 'No code coverage driver available; running without coverage.' . PHP_EOL); passthru('vendor/bin/phpunit --no-coverage', $status); exit($status); } if (!is_dir('build/coverage/xml')) { mkdir('build/coverage/xml', 0777, true); } if (!is_dir('build/coverage')) { mkdir('build/coverage', 0777, true); } if (extension_loaded('xdebug')) { putenv('XDEBUG_MODE=coverage'); } passthru('vendor/bin/phpunit --coverage-text=build/coverage/coverage.txt --coverage-clover build/coverage/clover.xml --coverage-xml build/coverage/xml --log-junit build/coverage/junit.xml', $status); exit($status);\"",
        "analyse": [
            "@phpstan",
            "@phpstan-deprecation"
        ],
        "check": [
            "@analyse",
            "@test"
        ],
        "phpstan": "vendor/bin/phpstan analyse --configuration=phpstan.neon.dist",
        "phpstan-deprecation": "vendor/bin/phpstan analyse --configuration=phpstan-deprecation.neon",
        "cs": "vendor/bin/phpcs --standard=PSR12 --warning-severity=0 src",
        "mutation": "@php -r \"if (!extension_loaded('xdebug') && !extension_loaded('pcov') && PHP_SAPI !== 'phpdbg') { fwrite(STDERR, 'Mutation testing skipped: no coverage driver available.' . PHP_EOL); exit(0); } passthru('vendor/bin/infection --threads=max --min-msi=85 --min-covered-msi=85 --ansi', $status); exit($status);\""
    },
    "config": {
        "allow-plugins": {
            "infection/extension-installer": true
        }
    }
}
